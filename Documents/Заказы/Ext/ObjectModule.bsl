
Процедура ОбработкаПроведения(Отказ, Режим)
	Если СтатусЗаказа = Перечисления.СтатусЗаказа.Принят Тогда 
		Движения.СредстваНаСкладе.Записывать = Истина;
		Движения.СредстваНаСкладе.Записать();
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НоменклатураСостав.Комплектующие КАК Комплектующие,
		|	СУММА(НоменклатураСостав.Количество) КАК Количество,
		|	СУММА(ЗаказыУслуги.Цена) КАК Цена
		|ПОМЕСТИТЬ ВТ_ТЧДока
		|ИЗ
		|	Документ.Заказы.Услуги КАК ЗаказыУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура.Состав КАК НоменклатураСостав
		|		ПО ЗаказыУслуги.Услуга = НоменклатураСостав.Ссылка
		|ГДЕ
		|	ЗаказыУслуги.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	НоменклатураСостав.Комплектующие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ТЧДока.Комплектующие КАК Комплектующие,
		|	ВТ_ТЧДока.Количество КАК КоличествоВДоке,
		|	ВТ_ТЧДока.Цена КАК ЦенаВДоке,
		|	ЕСТЬNULL(СредстваНаСкладеОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(СредстваНаСкладеОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	ВТ_ТЧДока КАК ВТ_ТЧДока
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СредстваНаСкладе.Остатки(
		|				&Дата,
		|				Номенклатура В
		|					(ВЫБРАТЬ
		|						ВТ_ТЧДока.Комплектующие КАК Номенклатура
		|					ИЗ
		|						ВТ_ТЧДока КАК ВТ_ТЧДока)) КАК СредстваНаСкладеОстатки
		|		ПО ВТ_ТЧДока.Комплектующие = СредстваНаСкладеОстатки.Номенклатура";
		
		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка= РезультатЗапроса.Выбрать();

		Движения.СредстваНаСкладе.Записывать = Истина;
		Движения.СредстваУСотрудников.Записывать = Истина;
		
		Пока Выборка.Следующий() Цикл
			Недостаток = Выборка.КоличествоВДоке - Выборка.КоличествоОстаток;
			
			Если Недостаток>0 Тогда 
				Сообщить("Номенклатуры "+Выборка.Комплектующие+" в количестве "+Недостаток);
				Отказ = Истина
			КонецЕсли;        
			
			
			Движение = Движения.СредстваНаСкладе.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Комплектующие;
			Движение.Количество = Выборка.КоличествоВДоке;
			Движение.Сумма = Выборка.КоличествоВДоке/Выборка.КоличествоОстаток*Выборка.СуммаОстаток;
			
			Движение = Движения.СредстваУСотрудников.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.Номенклатура = Выборка.Комплектующие;
			Движение.Сотрудник = ФИОСотрудника;
			Движение.Количество = Выборка.КоличествоВДоке;
		КонецЦикла; 
	КонецЕсли;
	
	// регистр ЗанятостьСотрудников
	 
		Движение = РегистрыСведений.ЗанятостьСотрудников.СоздатьМенеджерЗаписи();
		Движение.Сотрудник = ФИОСотрудника;
		Если  СтатусЗаказа = Перечисления.СтатусЗаказа.Принят Тогда
			Движение.Занятость = Перечисления.СтатусСотрудника.НаВыезде;
		ИначеЕсли СтатусЗаказа = Перечисления.СтатусЗаказа.Выполнен Тогда
			Движение.Занятость = Перечисления.СтатусСотрудника.Свободен;
		КонецЕсли;
		Движение.Записать();
	
	
	// регистр ВзятыеЗаказы 
	Движения.ВзятыеЗаказы.Записывать = Истина;
	Движение = Движения.ВзятыеЗаказы.Добавить();
	Движение.Период = Дата;
	Движение.Сотрудник = ФИОСотрудника;
	Движение.СтоимостьЗаказов = ОбщаяСтоимость;
	
	Если НЕ СтатусЗаказа <> Перечисления.СтатусЗаказа.Принят Тогда 
		Набор = РегистрыСведений.СтатусыСозданияЗаказов.СоздатьНаборЗаписей();
		Запись = Набор.Добавить();
		Запись.ChatId = ЧатИД;
		Запись.ЗаказСоздается = Ложь;
		Набор.Записать(Истина); 
	КонецЕсли;                  
	Если СтатусЗаказа = Перечисления.СтатусЗаказа.Принят Тогда
		SDK_Telegram.sendMessage(ЧатИД,"Ваш заказ №"+Номер+" принят"+Символы.ПС+"Фото сотрудника :");
		
		Если ФИОСотрудника.Картинка.Получить() <> Неопределено Тогда 
		
			ИмяФото = ПолучитьИмяВременногоФайла(".jpg");
			
			ФИОСотрудника.Картинка.Получить().Записать(ИмяФото);
		 
			SDK_Telegram.sendPhoto(ЧатИД,,,,,,ИмяФото);		
		КонецЕсли;
	КонецЕсли;
	
	Если СтатусЗаказа = Перечисления.СтатусЗаказа.Выполнен Тогда
		SDK_Telegram.sendMessage(ЧатИД,"Ваш заказ №"+Номер+" выполнен");
	КонецЕсли;
КонецПроцедуры
