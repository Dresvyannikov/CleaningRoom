
&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	СТЧ = Элементы.Услуги.ТекущиеДанные;
	СТЧ.Цена = РаботаСоСправочниками.РозничнаяЦена(ТекущаяДата(), СТЧ.Услуга); 
	Объект.ОбщаяСтоимость = Объект.Услуги.Итог("Цена")* Объект.ПлощадьПомещения;
//	ИтогПоЦене();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	 
	//Если ТекущаяДата()>Объект.ВремяОкончанияЗаказа Тогда
	//	Объект.СтатусЗаказа = ПредопределенноеЗначение("Перечисление.СтатусЗаказа.Выполнен");
	//	Объект.СтатусСотрудника =ПредопределенноеЗначение("Перечисление.СтатусСотрудника.Свободен") 
	//Иначе 
	//	Объект.СтатусЗаказа =ПредопределенноеЗначение("Перечисление.СтатусЗаказа.Принят");
	//	Объект.СтатусСотрудника = ПредопределенноеЗначение("Перечисление.СтатусСотрудника.НаВыезде")
	//КонецЕсли
КонецПроцедуры


&НаКлиенте
Процедура ФИОСотрудникаПриИзменении(Элемент) 
//	РаботаСдокументами.ПроведениеДока();   
	//Объект.СтатусСотрудника = ПредопределенноеЗначение("Перечисление.СтатусСотрудника.НаВыезде");
	//Если Объект.СтатусЗаказа = ПредопределенноеЗначение("Перечисление.СтатусЗаказа.Выполнен") Тогда
	//	Сообщить("Заказ уже выполнен");
	//Иначе
	//	Объект.СтатусСотрудника = ПредопределенноеЗначение("Перечисление.СтатусСотрудника.НаВыезде")
	//КонецЕсли 
	Если НЕ ПроверитьСотрудника(Объект.ФИОСотрудника) Тогда 
		Сообщить("Этот сотрудник сейчас занят");
		Объект.ФИОСотрудника = Неопределено;
	КонецЕсли;
КонецПроцедуры

Функция ПроверитьСотрудника(Сотрудник)
	//Отбор =  Новый Структура("Сотрудник",Сотрудник);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗанятостьСотрудников.Занятость КАК Занятость
		|ИЗ
		|	РегистрСведений.ЗанятостьСотрудников КАК ЗанятостьСотрудников
		|ГДЕ
		|	ЗанятостьСотрудников.Сотрудник = &Сотрудник";
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Статус = ВыборкаДетальныеЗаписи.Занятость;
	КонецЕсли;
	//Статус = РегистрыСведений.ЗанятостьСотрудников.ПолучитьПоследнее(ТекущаяДата(),Отбор).Занятость;
	Если Статус = Перечисления.СтатусСотрудника.НаВыезде Тогда 
		Возврат Ложь;
	Иначе 
		Возврат Истина;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ЭкспортТаблицы(Команда)
	П = Новый Структура;
    П.Вставить("Ключ", ЭтотОбъект);
	
	ОткрытьФорму("Документ.Заказы.Форма.ФормаЭкспорта",,,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	//Форма= Документы.Заказы.ПолучитьФорму("ФормаЭкспорта",ЭтотОбъект);//ПолучитьФорму("Документ.Заказы.ФормаЭкспорта");
	//Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ОбщаяСтоимостьПриИзменении(Элемент)
	//СТЧ = Элементы.Услуги.ТекущиеДанные;
	//СТЧ.Цена = РаботаСоСправочниками.РозничнаяЦена(ТекущаяДата(), СТЧ.Услуга); 
	//Объект.ОбщаяСтоимость = Объект.Услуги.Итог("Цена")* Объект.ПлощадьПомещения;
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	ИтогПоЦене();
КонецПроцедуры

Процедура ИтогПоЦене()
	Объект.ОбщаяСтоимость = Объект.Услуги.Итог("Цена")*Объект.ПлощадьПомещения;;
КонецПроцедуры

